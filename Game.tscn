[gd_scene load_steps=23 format=2]

[ext_resource path="res://levels/Entrance.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/resources/sheet.png" type="Texture" id=2]
[ext_resource path="res://assets/transparent.png" type="Texture" id=3]
[ext_resource path="res://assets/vignette.png" type="Texture" id=4]
[ext_resource path="res://assets/interface/hearts.png" type="Texture" id=5]
[ext_resource path="res://assets/interface/itembox_select.png" type="Texture" id=6]
[ext_resource path="res://assets/interface/itembox.png" type="Texture" id=7]
[ext_resource path="res://assets/interface/itembox_thingy.png" type="Texture" id=8]
[ext_resource path="res://CanvasLayer.gd" type="Script" id=9]
[ext_resource path="res://scenes/Text.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/Player.tscn" type="PackedScene" id=12]

[sub_resource type="GDScript" id=39]
script/source = "extends Node2D
"

[sub_resource type="Environment" id=40]
background_mode = 4
glow_enabled = true
glow_intensity = 0.1
glow_blend_mode = 0
glow_hdr_threshold = 2.0

[sub_resource type="Shader" id=37]
code = "shader_type canvas_item;

uniform sampler2D vignette;

void fragment() {
	vec3 vignette_color = texture(vignette, UV).rgb;
	// Screen texture stores gaussian blurred copies on mipmaps.
	COLOR.rgb = textureLod(SCREEN_TEXTURE, SCREEN_UV, (1.0 - vignette_color.r) * 1.0).rgb;
	COLOR.rgb *= texture(vignette, UV).rgb;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 37 )
shader_param/vignette = ExtResource( 4 )

[sub_resource type="Shader" id=38]
code = "shader_type canvas_item;

uniform sampler2D vignette;

void fragment() {
	vec3 vignette_color = texture(vignette, UV).rgb;
	// Screen texture stores gaussian blurred copies on mipmaps.
	COLOR.rgb = textureLod(SCREEN_TEXTURE, SCREEN_UV, (1.0 - vignette_color.r) * 1.0).rgb;
	COLOR.rgb = COLOR.rgg;
}"

[sub_resource type="ShaderMaterial" id=27]
shader = SubResource( 38 )
shader_param/vignette = ExtResource( 4 )

[sub_resource type="Animation" id=25]
resource_name = "default"
length = 4.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Heart:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3.5, 3.6, 3.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 1.8, 1.8 ), Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Heart2:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 3.6, 3.7, 3.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 1.8, 1.8 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Heart3:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 3.7, 3.8, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 1.8, 1.8 ), Vector2( 2, 2 ) ]
}

[sub_resource type="Shader" id=41]
code = "shader_type canvas_item;

uniform float num_lines = 20.;
uniform float y_threshold: hint_range(0.0, 1.0) = 0.5;
uniform vec4 line_color_a: hint_color = vec4(1.);
uniform vec4 line_color_b: hint_color = vec4(0., 0., 0., 1.0);

void fragment() {
	vec2 tiled_uv = vec2(fract(UV.x * num_lines / 2.), UV.y);
	if (tiled_uv.x < 0.5){
		if(tiled_uv.y < y_threshold){
			COLOR = line_color_a;
		} else {
			COLOR = vec4(0.0);
		}
	} else {
		if (tiled_uv.y > 1. - y_threshold){
			COLOR = line_color_b;
		} else {
			COLOR = vec4(0.0);
		}
	}
}"

[sub_resource type="ShaderMaterial" id=42]
shader = SubResource( 41 )
shader_param/num_lines = 8.0
shader_param/y_threshold = 1.0
shader_param/line_color_a = Color( 1, 1, 1, 1 )
shader_param/line_color_b = Color( 0, 0, 0, 1 )

[sub_resource type="StyleBoxFlat" id=43]
bg_color = Color( 0, 0, 0, 1 )

[sub_resource type="Animation" id=44]
resource_name = "default"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Panel:material:shader_param/y_threshold")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[node name="Node2D" type="Node2D"]
script = SubResource( 39 )
__meta__ = {
"_edit_horizontal_guides_": [  ]
}

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 40 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
script = ExtResource( 9 )

[node name="Container" type="MarginContainer" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="TextureRect" type="TextureRect" parent="CanvasLayer/Container"]
material = SubResource( 3 )
margin_right = 256.0
margin_bottom = 144.0
texture = ExtResource( 3 )
stretch_mode = 1

[node name="TextureRect_HSL" type="TextureRect" parent="CanvasLayer/Container"]
visible = false
material = SubResource( 27 )
margin_right = 256.0
margin_bottom = 144.0
texture = ExtResource( 3 )
stretch_mode = 1

[node name="Control" type="Control" parent="CanvasLayer/Container"]
margin_right = 256.0
margin_bottom = 144.0

[node name="Heart" type="Sprite" parent="CanvasLayer/Container/Control"]
position = Vector2( 104, 14 )
scale = Vector2( 2, 2 )
texture = ExtResource( 5 )
hframes = 4

[node name="Heart2" type="Sprite" parent="CanvasLayer/Container/Control"]
position = Vector2( 128, 14 )
scale = Vector2( 2, 2 )
texture = ExtResource( 5 )
hframes = 4

[node name="Heart3" type="Sprite" parent="CanvasLayer/Container/Control"]
position = Vector2( 152, 14 )
scale = Vector2( 2, 2 )
texture = ExtResource( 5 )
hframes = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/Container/Control"]
autoplay = "default"
anims/default = SubResource( 25 )

[node name="Itembox" type="Sprite" parent="CanvasLayer/Container"]
visible = false
position = Vector2( 104, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )

[node name="Itembox2" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 128, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )

[node name="Itembox3" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 152, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )

[node name="Sprite" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 104, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
hframes = 12
vframes = 12
frame = 38

[node name="ItemboxSelect" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 104, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 6 )

[node name="ItemboxThingy" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 80, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 8 )
hframes = 2

[node name="ItemboxThingy2" type="Sprite" parent="CanvasLayer/Container"]
position = Vector2( 176, 128 )
scale = Vector2( 2, 2 )
texture = ExtResource( 8 )
hframes = 2
frame = 1

[node name="Panel" type="Panel" parent="CanvasLayer"]
modulate = Color( 0, 0, 0, 1 )
material = SubResource( 42 )
anchor_right = 1.0
anchor_bottom = 1.0
custom_styles/panel = SubResource( 43 )

[node name="AnimationPlayer_Level" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "default"
anims/default = SubResource( 44 )

[node name="Text" parent="CanvasLayer" instance=ExtResource( 10 )]
anchor_top = 0.0
margin_top = 88.0

[node name="Map" type="Node2D" parent="."]

[node name="Entrance" parent="Map" instance=ExtResource( 1 )]

[node name="Player" parent="." instance=ExtResource( 12 )]
position = Vector2( 0, -12 )
